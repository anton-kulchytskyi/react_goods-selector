{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","add","goodToAdd","setState","remove","goodToRemove","filter","item","showSelected","length","toString","endsWith","slice","join","this","className","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,IAAM,SAACC,GACL,EAAKC,UAAS,SAACJ,GAAD,MACZ,CACEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,SARhD,EAaEE,OAAS,SAACC,GACR,EAAKF,UAAS,SAACJ,GAAD,MACZ,CACEC,cAAeD,EAAMC,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASF,UAhBnE,EAqBEG,aAAe,WACb,IAAQR,EAAkB,EAAKD,MAAvBC,cAER,OACO,IADCA,EAAcS,OAGhBT,EAAcU,WAAWC,SAAS,KAAlC,UACOX,EADP,2BAEOA,EAFP,gBAMI,GAAN,OACKA,EAAcY,MAAM,GAAI,GAAGC,KAAK,MADrC,gBACkD,CAACb,EAAcY,OAAO,IADxE,kBAjCR,4CAuCE,WAAU,IAAD,OACCZ,EAAkBc,KAAKf,MAAvBC,cAER,OACE,sBAAKe,UAAU,MAAf,UACGf,EAAcS,OAAS,EACtB,qBAAIM,UAAU,QAAd,UACGD,KAAKN,eACL,IACD,wBACEQ,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKd,SAAS,CACZH,cAAe,MALrB,kBAaF,oBAAIe,UAAU,QAAd,+BAEF,6BACGlB,EAAgBqB,KAAI,SAACX,GAAD,OACnB,qBAEEQ,UAAU,OAFZ,UAIGR,EACAP,EAAcmB,SAASZ,GACtB,wBACES,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKb,OAAOG,IAJhB,eAUA,wBACES,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKhB,IAAIM,IAJb,iBAfGA,eAlEnB,GAAyBa,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af1dc5c4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  add = (goodToAdd: string) => {\n    this.setState((state) => (\n      {\n        selectedGoods: [...state.selectedGoods, goodToAdd],\n      }\n    ));\n  };\n\n  remove = (goodToRemove: string) => {\n    this.setState((state) => (\n      {\n        selectedGoods: state.selectedGoods.filter(item => item !== goodToRemove),\n      }\n    ));\n  };\n\n  showSelected = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 1:\n        return (\n          selectedGoods.toString().endsWith('s')\n            ? `${selectedGoods} are selected`\n            : `${selectedGoods} is selected`\n        );\n\n      default:\n        return (\n          `${selectedGoods.slice(0, -1).join(', ')} and ${[selectedGoods.slice(-1)]} are selected`\n        );\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        {selectedGoods.length > 0 ? (\n          <h1 className=\"title\">\n            {this.showSelected()}\n            {' '}\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                this.setState({\n                  selectedGoods: [],\n                });\n              }}\n            >\n              X\n            </button>\n          </h1>\n        ) : (\n          <h1 className=\"title\">No goods selected</h1>\n        )}\n        <ul>\n          {goodsFromServer.map((item) => (\n            <li\n              key={item}\n              className=\"good\"\n            >\n              {item}\n              {selectedGoods.includes(item) ? (\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    this.remove(item);\n                  }}\n                >\n                  -\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    this.add(item);\n                  }}\n                >\n                  +\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}